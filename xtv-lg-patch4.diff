diff -Naur xtv/README.lgv-5480tvr xtv-patched/README.lgv-5480tvr
--- xtv/README.lgv-5480tvr	Wed Dec 31 19:00:00 1969
+++ xtv-patched/README.lgv-5480tvr	Thu Oct 24 15:15:06 2002
@@ -0,0 +1 @@
+xtvtap -i i5-lgv-5480tvr -geometry 640x480
diff -Naur xtv/i2c.c xtv-patched/i2c.c
--- xtv/i2c.c	Sat Nov 13 20:38:04 1999
+++ xtv-patched/i2c.c	Thu Oct 24 15:15:06 2002
@@ -308,6 +308,10 @@
 			fscanf(in, "%d %lf", &data, &freq);
 			SetPresetChannel(data, freq);
 		}
+		else if(!strcmp(cmd, "px0002")) {
+			fscanf(in, "%x", &data);
+			i2c_0002 = data;
+		}
 		else {
 			printf("Parser: syntax error at %s\n", cmd);
 		}
diff -Naur xtv/i5-lgv-5480tvr xtv-patched/i5-lgv-5480tvr
--- xtv/i5-lgv-5480tvr	Wed Dec 31 19:00:00 1969
+++ xtv-patched/i5-lgv-5480tvr	Thu Oct 24 15:15:06 2002
@@ -0,0 +1,172 @@
+# tuner 4 (samsung TCPN9082DA27C NTSC only tuner). Probe for I2C address.
+tuner 4 0
+
+# alternate address for px0002 (actually, I'm not even sure if it's a
+# px0002)
+px0002 0x4e
+
+# preset channels 
+# These match the local cable channels on the local
+# You probably need to edit and fix this. A good start
+# is the file \WINDOWS\CHANNEL.INI which the Windows95
+# tv program is using.
+#
+# These are for NTSC USA CATV STD.
+# Taken from c:\WINDOWS\CHANNEL.INI that came with lgv-5480tvr
+ch      1     000.00
+ch      2     055.25
+ch      3     061.25
+ch      4     067.25
+ch      5     077.25
+ch      6     083.25
+ch      7     175.25
+ch      8     181.25
+ch      9     187.25
+ch      10    193.25
+ch      11    199.25
+ch      12    205.25
+ch      13    211.25
+ch      14    121.25
+ch      15    127.25
+ch      16    133.25
+ch      17    139.25
+ch      18    145.25
+ch      19    151.25
+ch      20    157.25
+ch      21    163.25
+ch      22    169.25
+ch      23    217.25
+ch      24    223.25
+ch      25    229.25
+ch      26    235.25
+ch      27    241.25
+ch      28    247.25
+ch      29    253.25
+ch      30    259.25
+ch      31    265.25
+ch      32    271.25
+ch      33    277.25
+ch      34    283.25
+ch      35    289.25
+ch      36    295.25
+ch      37    301.25
+ch      38    307.25
+ch      39    313.25
+ch      40    319.25
+ch      41    325.25
+ch      42    331.25
+ch      43    337.25
+ch      44    343.25
+ch      45    349.25
+ch      46    355.25
+ch      47    361.25
+ch      48    367.25
+ch      49    373.25
+ch      50    379.25
+ch      51    385.25
+ch      52    391.25
+ch      53    397.25
+ch      54    403.25
+ch      55    409.25
+ch      56    415.25
+ch      57    421.25
+ch      58    427.25
+ch      59    433.25
+ch      60    439.25
+ch      61    445.25
+ch      62    451.25
+ch      63    457.25
+ch      64    463.25
+ch      65    469.25
+ch      66    475.25
+ch      67    481.25
+ch      68    487.25
+ch      69    493.25
+ch      70    499.25
+ch      71    505.25
+ch      72    511.25
+ch      73    517.25
+ch      74    523.25
+ch      75    529.25
+ch      76    535.25
+ch      77    541.25
+ch      78    547.25
+ch      79    553.25
+ch      80    559.25
+ch      81    565.25
+ch      82    571.25
+ch      83    577.25
+ch      84    583.25
+ch      85    589.25
+ch      86    595.25
+ch      87    601.25 
+ch      88    607.25 
+ch      89    613.25 
+ch      90    619.25 
+ch      91    625.25 
+ch      92    631.25 
+ch      93    637.25 
+ch      94    643.25 
+ch      95    91.25 
+ch      96    97.25 
+ch      97    103.25 
+ch      98    109.25 
+ch      99    115.25 
+ch      100   649.25 
+ch      101   655.25 
+ch      102   661.25 
+ch      103   667.25 
+ch      104   673.25 
+ch      105   679.25 
+ch      106   685.25 
+ch      107   691.25 
+ch      108   697.25 
+ch      109   703.25 
+ch      110   709.25 
+ch      111   715.25 
+ch      112   721.25 
+ch      113   727.25 
+ch      114   733.25 
+ch      115   739.25 
+ch      116   745.25 
+ch      117   751.25 
+ch      118   757.25 
+ch      119   763.25 
+ch      120   769.25 
+ch      121   775.25 
+ch      122   781.25 
+ch      123   787.25 
+ch      124   793.25 
+ch      125   799.25 
+
+# w2 - write to px0002 register
+# t - set tuner's initial channel
+w2 4 32
+w2 3 3a
+w2 3 38
+w2 3 38
+w2 4 36
+w2 3 38
+w2 3 38
+w2 3 38
+w2 4 32
+w2 2 0d
+w2 1 a0
+w2 2 0d
+w2 3 0
+w2 2 3d
+w2 3 8
+w2 4 3b
+
+w2 3 38
+w2 3 3a
+w2 3 3a
+
+w2 04 3b
+
+w2 4 33
+
+t 4
+
+w2 3 32
+w2 4 37
diff -Naur xtv/lgtvr xtv-patched/lgtvr
--- xtv/lgtvr	Wed Dec 31 19:00:00 1969
+++ xtv-patched/lgtvr	Thu Oct 24 15:15:06 2002
@@ -0,0 +1,4 @@
+#!/bin/bash
+
+./xtvtap -i i5-lgv-5480tvr -geometry 640x480
+
diff -Naur xtv/px0002.c xtv-patched/px0002.c
--- xtv/px0002.c	Wed Nov 11 17:35:28 1998
+++ xtv-patched/px0002.c	Thu Oct 24 15:15:06 2002
@@ -39,8 +39,27 @@
 void
 set_mute(int mute) {
 	int val;
+
+	/*FIXME with lgv-5480tvr set_mute(0) doesn't work.  Since this function
+	 * is called after a channel switch in xwin.c, sound is lost.
+	 */
+	if (i2c_0002 == 0x4e)
+		return;
+
 	val = i2c_read8(i2c_0002, 0x04);
 	val &= ~0x04;
 	if(!mute) val |= 0x04;
 	i2c_write8(i2c_0002, 0x04, val);
+}
+
+/*FIXME since I'm not using the above set_mute() function this is makes sure
+ * sound is turned off when the program exits.
+ */ 
+void
+audio_off(void) {
+	int val;
+
+	val = i2c_read8(i2c_0002, 0x04);
+    val &= ~0x04;
+    i2c_write8(i2c_0002, 0x04, val);
 }
diff -Naur xtv/px4072.c xtv-patched/px4072.c
--- xtv/px4072.c	Mon Apr 12 06:31:27 1999
+++ xtv-patched/px4072.c	Thu Oct 24 15:16:04 2002
@@ -15,12 +15,21 @@
 
 #include "xtv.h"
 
+#define VPX3225D 0x7230
+
 int i2c_4072  = 0x86; 
 
 /* Hard limits for the 4072, PAL and the clocks used */
 unsigned long max_width  = 704;	/* must be a multiple of 4 ! */
 unsigned long max_height = 576;
 
+static unsigned decoderId = 0x0;
+
+static unsigned fpReadReg   = 0x26;
+static unsigned fpWriteReg  = 0x27;
+static unsigned fpDataReg   = 0x28;
+static unsigned fpStatusReg = 0x29;
+
 void
 px4072_write_direct(unsigned reg, unsigned data) {
 	i2c_write8(i2c_4072, reg, data);
@@ -34,12 +43,12 @@
 void
 px4072_write_indirect(unsigned reg, unsigned data) {
 	unsigned status;
-	status = i2c_read8(i2c_4072, 0x29);
+	status = i2c_read8(i2c_4072, fpStatusReg);
 	/* printf("stat = %x\n", status); */
-	i2c_write16(i2c_4072, 0x27, reg);
-	status = i2c_read8(i2c_4072, 0x29);
+	i2c_write16(i2c_4072, fpWriteReg, reg);
+	status = i2c_read8(i2c_4072, fpStatusReg);
 	/* printf("stat = %x\n", status); */
-	i2c_write16(i2c_4072, 0x28, data);
+	i2c_write16(i2c_4072, fpDataReg, data);
 }
 
 
@@ -47,12 +56,12 @@
 px4072_read_indirect(unsigned reg) {
 	unsigned data, status;
 	
-	status = i2c_read8(i2c_4072, 0x29);
+	status = i2c_read8(i2c_4072, fpStatusReg);
 	/* printf("stat = %x\n", status); */
-	i2c_write16(i2c_4072, 0x26, reg);
-	status = i2c_read8(i2c_4072, 0x29);
+	i2c_write16(i2c_4072, fpReadReg, reg);
+	status = i2c_read8(i2c_4072, fpStatusReg);
 	/* printf("stat = %x\n", status); */
-	data = i2c_read16(i2c_4072, 0x28);
+	data = i2c_read16(i2c_4072, fpDataReg);
 
 	return data;
 }
@@ -77,17 +86,54 @@
 		h = lines-2*begin;
 	if(w > max_width)
 		w = max_width;
-	px4072_write_indirect(0x8e, begin);
-	px4072_write_indirect(0x8f, lines/2);
-	px4072_write_indirect(0x90, h/2);
-	px4072_write_indirect(0x91, 0);
-	px4072_write_indirect(0x92, w);
-	px4072_write_indirect(0x93, w);
-	px4072_write_indirect(0xf0, 0x041);
+
+	switch (decoderId) {
+	case VPX3225D:  //FIXME double check this
+		px4072_write_indirect (0x120, begin);  /* window1 ver begin */
+		px4072_write_indirect (0x121, lines/2);  /* w1 ver lines in */
+		px4072_write_indirect (0x122, h/2);  /* w1 ver lines out */
+		px4072_write_indirect (0x123, 0);  /* w1 horiz begin */
+		px4072_write_indirect (0x124, w); /* w1 horiz length */
+		px4072_write_indirect (0x125, w);  /* w1 num of pixels */
+		//px4072_write_indirect (0x140, 0x060);
+		px4072_write_indirect (0x140, 0x020);  /* latch window 1 */
+		break;
+	default:
+		px4072_write_indirect(0x8e, begin);
+		px4072_write_indirect(0x8f, lines/2);
+		px4072_write_indirect(0x90, h/2);
+		px4072_write_indirect(0x91, 0);
+		px4072_write_indirect(0x92, w);
+		px4072_write_indirect(0x93, w);
+		px4072_write_indirect(0xf0, 0x041);
+		break;
+	}
+}
+
+static void 
+vpx3225d_Setsource (void) {
+	unsigned data;
+
+	data = px4072_read_indirect (0x20);
+
+	switch (videosource) {
+	case TUNER:
+		px4072_write_indirect (0x21, 0x001);
+		px4072_write_indirect (0x20, data & 0xfbf);
+		break;
+	case VCR:  // svhs
+		px4072_write_indirect (0x21, 0x406);
+		px4072_write_indirect (0x20, data | 0x40);
+		break;
+	}
 }
 
 void
 px4072_Setsource(void) {
+	if (decoderId == VPX3225D) {
+		vpx3225d_Setsource ();
+		return;
+	}
 	switch(videosource) {
 	case TUNER:
 		px4072_write_direct(0x33, 1);
@@ -101,6 +147,12 @@
 void
 px4072_Setcolorspace() {
 	int valE8;
+
+	if (decoderId == VPX3225D) {
+		/*FIXME */
+		return;
+	}
+
 	switch(colorspace) {
 	case RGB_565:
 		valE8 = 0x06;
@@ -124,8 +176,28 @@
 	px4072_write_direct(0xe8, valE8);
 }
 
+static void
+vpx3225d_Setsystem (void) {
+	unsigned val;
+
+	/*FIXME */
+	switch (system) {
+	case NTSC:
+	default:
+		val = 0x001;
+		break;
+	}
+
+	px4072_write_indirect (0x150, val);
+}
+		
 void
 px4072_Setsystem() {
+	if (decoderId == VPX3225D) {
+		vpx3225d_Setsystem ();
+		return;
+	}
+
 	switch(system) {
 	case NTSC:
 		px4072_write_indirect(0xf2, 0x13);
@@ -142,6 +214,36 @@
 	}
 }
 
+void video_decoder_off (void)
+{
+	if (decoderId == VPX3225D) {
+		px4072_write_direct (0xF2, 0x00);  // disable output
+		px4072_write_direct (0xAA, 0x03);  // switch to low power mode
+		return;
+	}
+}
+
+static void
+vpx3225d_init (void) {
+	px4072_write_direct (0xAA, 0x00);  // full power mode
+	//px4072_write_direct (0xF8, 0x24);  // 
+	//px4072_write_direct (0xF9, 0x20);
+	//AC	px4072_write_direct (0xC8, 0);  // 64  sync slicer disable
+
+	px4072_Setwindow(capW, capH);
+	vpx3225d_Setsystem ();
+	px4072_Setsource();
+
+	//px4072_write_indirect (0x22, 0);  // start position of video active
+	//px4072_write_indirect (0x138, 0);  // disable vbi window
+	px4072_write_indirect (0x12B, 0xc00);  // disable window 2
+	px4072_write_indirect (0x126, 0x100);  // peaking and coring
+
+	px4072_write_indirect (0x154, 0x200);  // output multiplexer, set double
+	                                       // clock
+	px4072_write_direct (0xF2, 0x0f);  // enable output
+}
+
 void
 InitPX4072() {
 	int t1, t2;
@@ -156,15 +258,27 @@
 	      px4072_read_direct(0x01);
 
 	printf("InitPX4072: videodecoder %02x %04x\n", t1, t2);
+	decoderId = t2;
 
 	switch(t2) {
 	case 0x4680:
 	case 0x4260:
 	case 0x4280:
 		break;
+	case VPX3225D:  /* 0x7230 */
+		fpReadReg = 0x36;
+		fpWriteReg = 0x37;
+		fpDataReg = 0x38;
+		fpStatusReg = 0x35;
+		break;
 	default:
 		fprintf(stderr, "Unsupported video decoder\n");
 		exit(1);
+	}
+
+	if (decoderId == VPX3225D) {
+		vpx3225d_init ();
+		return;
 	}
 
 	px4072_write_indirect(0x89, 0xc01);
diff -Naur xtv/tuner.c xtv-patched/tuner.c
--- xtv/tuner.c	Sat Jun 19 18:45:21 1999
+++ xtv-patched/tuner.c	Thu Oct 24 15:15:06 2002
@@ -44,6 +44,7 @@
 	{ 38.90,  48.25, 170.00, 450.00, 855.25 }, /* 1216 CCIR B/G */
 	{ 42.75,  55.25, 160.00, 454.00, 801.25 }, /* 1236 RTMA M/N */
 	{ 38.90,  45.75, 170.00, 450.00, 855.25 }, /* 1246 CCIR I   */
+	{ 45.75,  55.25, 169.25, 457.25, 855.25 }, /* samsung TCPN9082DA27C NTSC only */
 };
 
 static int is_radio = 0;
diff -Naur xtv/xtv/README.lgv-5480tvr xtv-patched/xtv/README.lgv-5480tvr
--- xtv/xtv/README.lgv-5480tvr	Wed Dec 31 19:00:00 1969
+++ xtv-patched/xtv/README.lgv-5480tvr	Thu Oct 24 15:15:01 2002
@@ -0,0 +1 @@
+xtvtap -i i5-lgv-5480tvr -geometry 640x480
diff -Naur xtv/xwin.c xtv-patched/xwin.c
--- xtv/xwin.c	Sat Nov 13 23:01:25 1999
+++ xtv-patched/xwin.c	Thu Oct 24 15:15:06 2002
@@ -326,6 +326,8 @@
 	case XK_q:
 		gd5480_off();
 		set_mute(1);
+		audio_off ();  /*FIXME */
+		video_decoder_off ();
 		gd5480_restore();
 		exit(0);
 		break;
<!--'"</title></head>-->
<script type="text/javascript">
////// Compete /////////////////////
__compete_code = '667f89f26d96c30e99728fe6a608804d';
(function () {
    var s = document.createElement('script'),
        d = document.getElementsByTagName('head')[0] ||
            document.getElementsByTagName('body')[0],
        t = 'https:' == document.location.protocol ? 
            'https://c.compete.com/bootstrap/' : 
            'http://c.compete.com/bootstrap/';
    s.src = t + __compete_code + '/bootstrap.js';
    s.type = 'text/javascript';
    s.async = 'async'; 
    if (d) { d.appendChild(s); }
})();


////// Quantcast  /////////////////////
function channValidator(chann) {
    return (typeof(chann) == 'string' && chann != '');
}

function lycosQuantcast(){
    var lb = "";
    if(typeof(cm_host) !== 'undefined' && channValidator(cm_host)){
        lb += cm_host.split('.')[0] + '.';
    }

    if(typeof(cm_taxid) !== 'undefined' && channValidator(cm_taxid)){
        lb += cm_taxid;
        lb = lb.replace('/','');
    } else {
        lb = lb.replace('.','');
    }
    return lb;
}

var _qevents = _qevents || [];

(function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" :"http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
})();

_qevents.push({
    qacct:"p-6eQegedn62bSo",
    labels:lycosQuantcast()
});

////// OwnerIQ  /////////////////////
var __oiq_pct = 50;
if( __oiq_pct>=100 || Math.floor(Math.random()*100/(100-__oiq_pct)) > 0 ) {
    var _oiqq = _oiqq || [];
    _oiqq.push(['oiq_addPageBrand', 'Lycos']);
    _oiqq.push(['oiq_addPageCat', 'Internet > Websites']);
    _oiqq.push(['oiq_addPageLifecycle', 'Intend']);
    _oiqq.push(['oiq_doTag']);

    (function() {
        var oiq = document.createElement('script'); oiq.type = 'text/javascript'; oiq.async = true;
        oiq.src = document.location.protocol + '//px.owneriq.net/stas/s/lycosn.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(oiq, s);
    })();
}



/////// Google Analytics ////////////
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-21402695-19']);
_gaq.push(['_setDomainName', 'tripod.com']);
_gaq.push(['_setCustomVar', 1, 'member_name', 'angcano', 3]);
_gaq.push(['_trackPageview']);
(function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();


/////// Lycos Initialization ////////////
function getReferrer() {
    // Reads the referrer out of the cookie, if available.
    var all= this.document.cookie;
    if (all== '') return false;
    var cookie_name = 'REFERRER=';
    var start = all.lastIndexOf(cookie_name);
    if (start == -1) return false;  // referrer URL not found.
    start += cookie_name.length;
    var end = all.indexOf(';', start);
    if (end == -1) end = all.length;
    return all.substring(start, end);
}
function getQuery() {
    // Get the referrer search query from cookie, if available.
    var rfr = getReferrer();
    if (rfr == '') return false;
    var q = extractQuery(rfr, 'yahoo.com', 'p=');
    if (q) return q;
    q = extractQuery(rfr, '', 'q=');
    return q ? q : "";
}
function extractQuery(full, site, q_param) {
    var start = full.lastIndexOf(site);
    if (start == -1) return false;
    start = full.lastIndexOf(q_param);
    if (start == -1) return false;
    start += q_param.length;
    var end = full.indexOf('&', start);
    if (end == -1) end = full.length;
    return unescape(full.substring(start, end)).split(" ").join("+");
}

function generateHref(atag, template){
    atag.href=template.replace('_MYURL_', window.location.href.replace('http://', '')).replace('_MYTITLE_', 'Check%20out%20this%20Tripod%20Member%20site!'); 
}


var lycos_ad = Array();
var lycos_onload_timer;

var cm_role = "live";
var cm_host = "tripod.lycos.com";
var cm_taxid = "/memberembedded";
var tripod_member_name = "angcano";
var tripod_member_page = "angcano/xtv-lg-patch4.diff";
var tripod_ratings_hash = "1348955286:b84c6c39630adc71f8c0cf6c8b130d14";

var lycos_ad_category = {"dmoz":"computers\/hardware","ontarget":"&CAT=technology&L2CAT=computing&L3CAT=hardware","find_what":"logitech AND quickcam AND express"};

var lycos_ad_remote_addr = "74.88.1.184";
var lycos_ad_www_server = "www.tripod.lycos.com";
var lycos_ad_track_small = "http://members.tripod.com/adm/img/common/ot_smallframe.gif?rand=681876";
var lycos_ad_track_served = "http://members.tripod.com/adm/img/common/ot_adserved.gif?rand=681876";
var lycos_search_query = getQuery();


////// Criteo /////////////////////
var cto_conf = { a:true, i: "294", c:"img", kw: "" } ;
(function (){
    var c = document.createElement("script"); c.type = "text/javascript"; c.async = true;
    // Put the loader URL here, eg: www.yourdomain.com/criteo_ld_kw.js
    c.src = "http://members.tripod.com/adm/partner/criteo_ld_kw.js";
    var s = document.getElementsByTagName("body")[0]; s.appendChild(c);
})(); 

</script>

<script type="text/javascript" src="http://scripts.lycos.com/catman/init.js"></script>
<script type="text/javascript"> 

(function(isV) {
    if (!isV) {
        return;
    }

    //this.lycos_search_query = lycos_get_search_referrer();
    var adMgr = new AdManager();
    var lycos_prod_set = adMgr.chooseProductSet();
    var slots = ["leaderboard", "leaderboard2", "toolbar_image", "toolbar_text", "smallbox", "top_promo", "footer2"];
    var adCat = this.lycos_ad_category;
    adMgr.setForcedParam('page', (adCat && adCat.dmoz) ? adCat.dmoz : 'member');

    if (this.lycos_search_query) {
        adMgr.setForcedParam("keyword", this.lycos_search_query);
    } 
    else if (adCat && adCat.find_what) {
        adMgr.setForcedParam('keyword', adCat.find_what);
    }

    for (var s in slots) {
        var slot = slots[s];
        if (adMgr.isSlotAvailable(slot)) {
            this.lycos_ad[slot] = adMgr.getSlot(slot);
        }
    }

    adMgr.renderHeader();
    adMgr.renderFooter();
}((function() {
    var w = 0, h = 0, minimumThreshold = 300;
    if (top == self) {
        return true;
    }

    if (typeof(window.innerWidth) == 'number' ) {
        w = window.innerWidth;
        h = window.innerHeight;
    }
    else if (document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight)) {
        w = document.documentElement.clientWidth;
        h = document.documentElement.clientHeight;
    }
    else if (document.body && (document.body.clientWidth || document.body.clientHeight)) {
        w = document.body.clientWidth;
        h = document.body.clientHeight;
    }

    return ((w > minimumThreshold) && (h > minimumThreshold));
}())));
    
window.onload = function() {
    var f = document.getElementById("FooterAd");
    var b = document.getElementsByTagName("body")[0];
    b.appendChild(f);
    f.style.display = "block";
    document.getElementById('lycosFooterAdiFrame').src = '/adm/ad/footerAd.iframe.html';


    // DOM Injection Ad
    (function(isTrellix) {
        var e = document.createElement('iframe');
        e.style.border = '0';
        e.style.margin = 0;
        e.style.display = 'block';
        e.style.cssFloat = 'right';
        e.style.height = '254px';
        e.style.overflow = 'hidden';
        e.style.padding = 0;
        e.style.width = '300px';

        var getCommentNodes = function(regexPattern) {
            var nodes = {};
            var nodesA = [];
            var preferredNodesList = ['a', 'c', 'b'];

            (function getNodesThatHaveComments(n, pattern) {
                if (n.hasChildNodes()) {
                    if (n.tagName === 'IFRAME') {
                        return false;
                    }
                    for (var i = 0; i < n.childNodes.length; i++) {
                        if ((n.childNodes[i].nodeType === 8) && (pattern.test(n.childNodes[i].nodeValue))) {
                            var areaName = pattern.exec(n.childNodes[i].nodeValue)[1];
                            nodes[areaName] = n;
                        }
                        else if (n.childNodes[i].nodeType === 1) {
                            getNodesThatHaveComments(n.childNodes[i], pattern);
                        }
                    }
                }
            }(document.body, regexPattern));

            for (var i in preferredNodesList) {
                if (nodes[preferredNodesList[i]]) {
                    if (nodes[preferredNodesList[i]].parentNode.parentNode.parentNode.parentNode) {
                        nodesA.push(nodes[preferredNodesList[i]].parentNode.parentNode.parentNode.parentNode);
                    }
                }
            }

            return nodesA;
        }

        var properNode = null;
        var areaNodes = getCommentNodes(new RegExp('^area Type="area_(\\w+)"'));
        for (var i = 0; i < areaNodes.length; i++) {
            var a = parseInt(getComputedStyle(areaNodes[i]).width);
            if ((a >= 300) && (a <= 400)) {
                properNode = areaNodes[i];
                break;
            }
        }

        if ((isTrellix) && (properNode)) {
            e.src = '/adm/ad/injectAd.iframe.html';
            properNode.insertBefore(e, properNode.firstChild);
        }
        else {
            e.src = '/adm/ad/sliderAd.iframe.html';
            var sliderBlock = document.getElementById('lyslider-adblock-wrapper');
            var sliderHolder = document.getElementById('lyslider-adblock-holder');
            var sliderClose = document.getElementById('lyslider-adblock-close');
            sliderBlock.style.display = 'block';

            sliderClose.onclick = function() {
                sliderBlock.parentNode.removeChild(sliderBlock);
                return false;
            }

            var iframeOnload = function() {
                setTimeout((function sliiide() {
                    var s = (window.getComputedStyle) ? parseInt(getComputedStyle(sliderHolder).right) : parseInt(sliderHolder.currentStyle.right);
                    if (s <= 0) {
                        sliderHolder.style.right = (s + 6) + 'px';
                        setTimeout(sliiide, 10);
                    }
                    else {
                        sliderHolder.style.right = '0px';
                        sliderClose.style.display = 'block';
                    }
                }), 1000);
            }

            if (e.attachEvent) {
                e.attachEvent('onload', iframeOnload);
            }
            else {
                e.addEventListener('load', iframeOnload, false);
            }

            sliderHolder.insertBefore(e, sliderHolder.firstChild);
        }
    }(document.isTrellix));

}



</script>
<style>
	#body .adCenterClass{margin:0 auto}
</style>

<div id="tb_container" style="background:#DFDCCF; border-bottom:1px solid #393939; position:relative; z-index:999999999!important">
    <div id="tb_ad" class="adCenterClass" style="display:block!important; overflow:hidden; width:916px;">
    <a href="http://adtrack.ministerial5.com/clicknew/?a=637394" title="build your own website at Tripod.com" style="float:left; width:186px; border:0">
    	<img src="http://ly.lygo.com/ly/tpSite/images/freeAd2.jpg" alt="Make your own free website on Tripod.com" style="border:0; display:block" />
    </a> 
        <div id="ad_container" style="display:block!important; float:left; width:728px ">
        <script type="text/javascript">document.write(lycos_ad['leaderboard']);</script>
        </div>
    </div>
</div>

<!-- ///////////////////////////////////// -->
<div id="lyslider-adblock-wrapper" style="display:none; height:300px; overflow:hidden; position:absolute; right:0; top:150px; width:320px; z-index:99999999; ">
<div id="lyslider-adblock-holder" style="background-color:#888; height:250px; margin-bottom:25px; padding:4px; position:absolute; right:-320px; top:10px; width:300px; ">
<a id="lyslider-adblock-close" href="#" style="background-color:#222; bottom:-19px; color:#fff; display:block; font:10px Arial, Helvetica, Sans-serif; padding:4px; position:absolute; right:0; text-decoration:none; z-index:9999999999">Close Ad</a>
</div>
</div>


<div id="FooterAd" style="background:#DFDCCF; border-top:1px solid #393939; clear:both; display:none; width:100%!important; position:relative; z-index:999999!important; height:90px!important"> 
	<div class="adCenterClass" style="display:block!important; overflow:hidden; width:916px;">
	<a href="http://adtrack.ministerial5.com/clicknew/?a=637394" title="build your own website at Tripod.com" style="float:left; display:block; width:186px; border:0">
    	<img src="http://ly.lygo.com/ly/tpSite/images/freeAd2.jpg" alt="Make your own free website on Tripod.com" style="border:0; display:block; " />
    </a> 
        <div id="footerAd_container" style="display:block!important; float:left; width:728px">
        <iframe id="lycosFooterAdiFrame" style="border:0; display:block; float:left; height:96px; overflow:hidden; padding:0; width:750px"></iframe>
        <!-- <script type="text/javascript">document.write(lycos_ad['leaderboard2']);</script> -->
        </div>
	</div>
</div>
<noscript>
 <img src="http://members.tripod.com/adm/img/common/ot_noscript.gif?rand=681876" alt="" width="1" height="1" />
 <!-- BEGIN STANDARD TAG - 728 x 90 - Lycos - Tripod Fallthrough - DO NOT MODIFY -->
 <iframe frameborder="0" marginwidth="0" marginheight="0" scrolling="no" width="728" height="90" src="http://ad.yieldmanager.com/st?ad_type=iframe&amp;ad_size=728x90&amp;section=209094"></iframe>
 <!-- END TAG -->
</noscript>

<!-- Start Ybrant tracker -->
<img src="http://ad.yieldmanager.com/pixel?id=1901600&t=2" width="1" height="1" />
<!--   End Ybrant tracker -->

